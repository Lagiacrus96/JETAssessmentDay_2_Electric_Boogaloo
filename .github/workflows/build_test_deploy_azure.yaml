name: Build, Test, and Deploy for Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: pytest 

      - name: Run pylint
        run: pylint build.py

        
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Run build.py
        run: python build.py

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Set up Azure credentials for Terraform
        run: |
          echo "TF_VAR_client_id=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_client_secret=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "TF_VAR_tenant_id=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
      
      - name: Terraform Init
        run: |
          cd azure
          terraform init
      
      - name: Terraform Plan
        run: |
          cd azure
          terraform plan
      
      - name: Terraform Apply
        run: |
          cd azure
          terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        
      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload html to Azure storage
        run: |
          az storage blob upload --overwrite\
            --account-name jetwebsitestorage \
            --container-name \$web \
            --name index.html \
            --file dist/index.html \
            --auth-mode login
